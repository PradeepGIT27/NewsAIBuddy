package com.support.tech.newsaibuddy.data.entity

import java.util.UUID

/**
 * Enum representing the sender of a chatbot message.
 */
enum class ChatBotMessageSender {
    /** Indicates the message is from the user. */
    USER,
    /** Indicates the message is from the AI model. */
    MODEL,
    /** Indicates the message is an error message. */
    ERROR
}

/**
 * Data class representing a single message in the chatbot conversation.
 *
 * @property id A unique identifier for the message, generated by default using UUID.
 * @property text The main content of the message.
 * @property details Additional details or context for the message (e.g., error details).
 * @property participant The sender of the message, defaults to USER.
 * @property isPending A flag indicating if the message is still being processed or waiting for a response (e.g., from the model).
 * @property timestamp The time the message was created, in milliseconds since the epoch.
 */
data class ChatBotMessage(
    val id: String = UUID.randomUUID().toString(),
    val text: String = "",
    val details: String = "",
    val participant: ChatBotMessageSender = ChatBotMessageSender.USER,
    var isPending: Boolean = false,
    val timestamp: Long = System.currentTimeMillis()
)